<?php

namespace AppBundle\Entity;
use Symfony\Component\VarDumper\VarDumper;

/**
 * PostReadRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostReadRepository extends \Doctrine\ORM\EntityRepository
{
    public function getReport(Post $post, \DateTime $from = null, \DateTime $to = null)
    {
        $qb = $this->createQueryBuilder('r');

        $qb->where('r.post = :post');

        $where = '';

        if ($from) {
            $from = $from->format('Y-m-d');
            $where .= "AND datetime >= '{$from}'";
            $qb->andWhere("r.datetime > '{$from}'");
        }

        if ($to) {
            $to = $to->format('Y-m-d');
            $where .= "AND datetime <= '{$to}'";
            $qb->andWhere("r.datetime <= '{$to}'");
        }

        $qb->setParameter('post', $post);

        $uniqueUsers = clone $qb;
        $uniqueUsers = $uniqueUsers
            ->select(['COUNT(DISTINCT(r.ip)) AS total'])
            ->getQuery()
            ->execute();

        $totalReads = clone $qb;
        $totalReads = $totalReads
            ->select(['COUNT(r.id) AS total'])
            ->getQuery()
            ->execute();

        $postId = $post->getId();

        $engagementChartSql = <<<SQL
        SELECT
        COUNT(id) AS totalReads,
        post,
        DATE_FORMAT(datetime, '%Y-%m-%d') AS timestamp
        FROM posts_reads
        WHERE post = {$postId}
        {$where}
        GROUP BY post, DATE_FORMAT(datetime, '%Y-%m-%d')
        ORDER BY datetime ASC
SQL;

        $em = $this->getEntityManager();
        $stmt = $em->getConnection()->prepare($engagementChartSql);
        $stmt->execute();

        return [
            'uniqueUsers' => $uniqueUsers[0]['total'],
            'totalReads' => $totalReads[0]['total'],
            'engagementChart' => $stmt->fetchAll()
        ];
    }
}
